CREATE TABLE Product
(
product_id int primary key,
name varchar(128) not null,
rrp float not null,
available_from date not null
);

CREATE TABLE MyOrders
(
order_id int primary key,
product_id int not null,
quantity int not null,
order_price float not null,
dispatch_date date not null,
foreign key (product_id) references product(product_id)
);

INSERT INTO Product
VALUES(101, 'Bayers', 94.95, '2015-06-20');


INSERT INTO MyOrders
VALUES(1000, 101, 1, 90.0, '2013-04-20');


product_id	        name	                                rrp	        available_from
101	                Bayers	                                94.95	    2015-06-20
102	                (next year) in Review (preorder	        21.95	    2016-06-20
103	                Learn python	                        2.15	    2016-03-20
104	                Sports	                                3.38	    2013-03-20
105	                Finance	                                84.99	    2014-06-20
106	                C++11	                                66.99	    2013-05-20
107	                C++14	                                66.99	    2015-06-10
108	                Java7	                                49.99	    2014-06-10
109	                Java8	                                59.99	    2015-06-01
110	                Scala	                                59.99	    2015-05-01
111	                Oracle	                                59.99	    2015-04-01


order_id	product_id	quantity	order_price	dispatch_date
1000	    101	        1	        90	        2013-04-20
1001	    103	        1	        1.15	    2013-05-16
1002	    101	        10	        90	        2014-07-20
1003	    104	        11	        3.38	    2014-12-20
1004	    105	        11	        501.33	    2013-06-20
1005	    106	        11	        66.99	    2013-06-20
1006	    106	        1	        66.99	    2014-06-20
1007	    106	        2	        66.99	    2014-07-20
1008	    106	        2	        66.99	    2014-08-20
1009	    106	        2	        66.99	    2014-09-20
1010	    106	        5	        66.99	    2015-03-20
1011	    106	        5	        66.99	    2015-04-20
1012	    107	        5	        66.99	    2015-04-20
1013	    107	        5	        66.99	    2015-05-20
1014	    107	        5	        66.99	    2015-05-24
1015	    108	        5	        66.99	    2015-05-24
1016	    108	        5	        66.99	    2015-06-24
1017	    108	        5	        66.99	    2015-03-24
1018	    109	        5	        66.99	    2015-06-24
1019	    110	        1	        501.33	    2013-06-20
1020	    110	        2	        501.33	    2015-06-21
1021	    110	        2	        501.33	    2015-06-22
1023	    111	        2	        501.33	    2013-06-22
1024	    111	        2	        501.33	    2015-06-23
1025	    111	        2	        501.33	    2015-06-24

/****************************************************************************************/
SELECT Product.product_id, Product.name
FROM MyOrders, Product
WHERE MyOrders.product_id == Product.product_id AND 
      Product.available_from < '2015-05-27' AND 
      MyOrders.dispatch_date > '2014-06-27'
GROUP BY MyOrders.product_id
HAVING SUM(MyOrders.quantity) < 10
UNION
SELECT Product.product_id, Product.name
FROM MyOrders, Product
WHERE MyOrders.product_id == Product.product_id
GROUP BY MyOrders.product_id
HAVING Max(MyOrders.dispatch_date) <= '2014-06-27'

Product.product_id	Product.name
103	                Learn python
105	                Finance
110	                Scala
111	                Oracle

SELECT Product.product_id, Product.name
FROM MyOrders, Product
WHERE MyOrders.product_id == Product.product_id AND 
      Product.available_from < DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND 
      MyOrders.dispatch_date > DATE_SUB(CURDATE(), INTERVAL 1 YEAR)
GROUP BY MyOrders.product_id
HAVING SUM(MyOrders.quantity) < 10
UNION
SELECT Product.product_id, Product.name
FROM MyOrders, Product
WHERE MyOrders.product_id == Product.product_id
GROUP BY MyOrders.product_id
HAVING Max(MyOrders.dispatch_date) <= DATE_SUB(CURDATE(), INTERVAL 1 YEAR)
/****************************************************************************************/